<?php
// Exit if accessed directly
if (!defined( 'ABSPATH')) { exit; }

/**
 *	NS_Basics_Global_Blocks class
 *
 *  Adds global blocks functionality
 */
class NS_Basics_Global_Blocks {

	/************************************************************************/
	// Initialize
	/************************************************************************/

	/**
	 *	Constructor
	 */
	public function __construct() {
		// Load admin object
		$this->admin_obj = new NS_Basics_Admin();
	}

	/**
	 *	Init
	 */
	public function init() {
		add_action( 'init', array( $this, 'create_post_type' ));
		add_shortcode('ns_block', array( $this, 'add_shortcode_block'));
	}

	/************************************************************************/
	// Global Blocks Custom Post Type
	/************************************************************************/

	/**
	 * Create Global Blocks custom post type
	 */
	public function create_post_type() {
		register_post_type( 'ns-global-blocks',
            array(
                'labels' => array(
                    'name' => __( 'Global Blocks', 'ns-basics' ),
                    'singular_name' => __( 'Block', 'ns-basics' ),
                    'add_new_item' => __( 'Add New Block', 'ns-basics' ),
                    'search_items' => __( 'Search Blocks', 'ns-basics' ),
                    'edit_item' => __( 'Edit Block', 'ns-basics' ),
                ),
            'public' => false,
            'publicly_queryable' => true, 
            'show_ui' => true,
            'show_in_menu' => true,
            'show_in_nav_menus' => false,
            'exclude_from_search' => true,
            'menu_position' => 27,
            'menu_icon' => 'dashicons-format-gallery',
            'has_archive' => false,
            'supports' => array('title', 'editor', 'page_attributes'),
            )
        );
	}

	/************************************************************************/
	// Shortcode
	/************************************************************************/

	/**
	 * Block shortcode
	 *
	 * @param array $atts
	 * @param string $content
	 */
	public function add_shortcode_block($atts, $content=null) {
		$atts = shortcode_atts(
	        array (
	        'id' => '',
	    ), $atts);

	    ob_start();
	    
	    if(!empty($atts['id'])) {

	    	do_action( 'ns_basics_before_global_block', $atts['id']); 

	    	//output styles generated by WP Bakery page builder
	    	$shortcodes_custom_css = get_post_meta($atts['id'], '_wpb_shortcodes_custom_css', true );
			if(!empty($shortcodes_custom_css)) {
			    $shortcodes_custom_css = strip_tags( $shortcodes_custom_css );
			    echo '<style type="text/css" data-type="vc_shortcodes-custom-css">';
			    echo $shortcodes_custom_css;
			    echo '</style>';
			}

			//output block content
	    	$content_post = get_post($atts['id']);
			$content = $content_post->post_content;
			$content = apply_filters('the_content', $content);
			$content = str_replace(']]>', ']]&gt;', $content);
			echo $content;

			do_action( 'ns_basics_after_global_block', $atts['id']); 

	    } else {
	    	echo __('Content block could not be found.', 'ns-basics');
	    }
		

	    $output = ob_get_clean();
	    return $output;
	}


	/************************************************************************/
	// Utilities
	/************************************************************************/

	/**
	 * Get all blocks
	 *
	 * @param array $atts
	 * @param string $content
	 */
	public static function get_blocks($empty_default = false) {
		$blocks = array();
    	if($empty_default == true) { $blocks['Select a block...'] = ''; }
    	
    	$block_posts = get_posts(array(
    		'post_type' => 'ns-global-blocks',
    		'post_status' => 'publish',
    		'showposts' => -1,
    	));

    	foreach($block_posts as $block) {
			$blocks[$block->post_title] = $block->ID;
		}
		return $blocks;
	}

}

?>